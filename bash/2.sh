#!/usr/bin/env bash
set -e

## Problem 2: Even Fibonacci numbers
#+ Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#+
#+ 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

max_value=4000000

test_even(){((${1} % 2)) && return 1 || : ;}

get_fibonaccis(){
  fibonaccis=( 1 2 )
  while [[ ${fibonaccis[-1]} -le ${max_value} ]]; do
    next_fibonacci=$(( ${fibonaccis[-1]} + ${fibonaccis[-2]} ))
    fibonaccis+=(${next_fibonacci})
  done
  echo ${fibonaccis[*]}
}

get_evens(){
  array=(${1})
  array_evens=()
  for member in ${array[@]}; do
    if $(test_even ${member}); then
      array_evens+=(${member})
    fi
  done
  echo ${array_evens[*]}
}

sum_array(){
  array=(${1})
  array_sum=0
  for member in ${array[@]}; do
    (( array_sum+=${member} ))
  done
  echo ${array_sum}
}

sum_array "$(get_evens "$(get_fibonaccis)")"